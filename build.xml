<project name="Exercise" basedir="." default="junit">

    <property file="ant.properties" />

    <property name="src.dir"     value="src"/>

    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="deliverable_jar"     value="${jar.dir}/${ant.project.name}.jar"/>

    <property name="log.dir"     value="${basedir}/log"/>

    <property name="main-class"  value="com.ghe.exercise.HelloWorld"/>

    <path id="project.class.path">
        <pathelement location="${deliverable_jar}"/>
        <pathelement location="${junit.lib}"/>
        <pathelement location="${hamcrest.lib}"/>
        <pathelement location="${log4j.lib}"/>
        <pathelement location="${log.dir}"/>

<!--        <fileset dir="${log4j.lib}">
          <includes name="*.jar"/>
        </fileset>
-->
    </path>
	
	<!-- get the source compile classpath in a printable form -->
	<pathconvert pathsep="${line.separator}|   |-- "
	         property="echo.path.compile"
	         refid="project.class.path">
	</pathconvert>
	 
	<!-- show classpath -->
	<target name="print_classpath">
	    <echo message="|-- The classpath is:"/>
	    <echo message="|   |"/>
	    <echo message="|   |-- ${echo.path.compile}"/>
	</target>
	
    <!-- show current working dir -->
	<target name="print_directory">
	  <echo>current directory: ${user.dir}</echo>
	</target>


    <target name="clean">
    	<echo>${classpath}</echo>
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
    	<javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}">
    	    <classpath refid="project.class.path"/>
    	</javac>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${deliverable_jar}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
<!--        <antcall target="print_classpath"/>
        <antcall target="print_directory"/>           -->
<!--
        <java jar="${deliverable_jar}" fork="true">
            <classpath refid="project.class.path"/>
hegb:You cannot run using "-jar". Refer to 
http://www.coderanch.com/t/584413/java/java/java-lang-NoClassDefFoundError-thrown-running
http://bugs.java.com/bugdatabase/view_bug.do?bug_id=4648386
        </java>
-->
        <java classname="${main-class}" classpathref="project.class.path" fork="true"/>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,run"/>

    <target name="junit" depends="jar">
        <junit printsummary="yes">
            <classpath>
                <path refid="project.class.path"/>
            </classpath>
            <batchtest fork="yes">
                <fileset dir="${classes.dir}" includes="**/*Test.class"/>
            </batchtest>
        </junit>
    </target>

</project>